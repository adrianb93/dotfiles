#!/usr/bin/env bash

set -e

# Generate a unique log version
logVersion=0
while [ -e "logs/brew.$logVersion.log" ]
do
    ((++logVersion))
done

# Link dotfiles
/bin/bash link | tee logs/link.$logVersion.log

# Install homebrew if it isn't already
if [ ! $(which brew) ]; then
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
fi

# Install vim-plug if it isn't already
if [ ! -e ~/.vim/autoload/plug.vim ]; then
    curl --create-dirs -fLo ~/.vim/autoload/plug.vim https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
fi

curl --create-dirs -fLo ~/.php_cs.laravel https://gist.githubusercontent.com/laravel-shift/cab527923ed2a109dda047b97d53c200/raw/1db6b058ee3672ebd1a88bac9d8182aed449eb05/.php_cs.laravel.php

curl --create-dirs -fLo ~/.config/kitty/dracula.conf https://raw.githubusercontent.com/dracula/kitty/master/dracula.conf

# Install / update homebrew dependecies
brew bundle --global --verbose | tee logs/brew.$logVersion.log

# Install / update composer dependecies
composer global install --verbose | tee logs/composer.$logVersion.log
composer global update --verbose | tee -a logs/composer.$logVersion.log
composer global outdated --direct --verbose | tee -a logs/composer.$logVersion.log

# Install / update npm dependecies
npm install -g pure-prompt intelephense | tee logs/npm.$logVersion.log
npm update -g | tee -a logs/npm.$logVersion.log
npm outdated -g | tee -a logs/npm.$logVersion.log

# Upgrade / install / update / clean vim-plug dependecies
vim -es -u ~/.vimrc -i NONE -c "PlugUpgrade" -c "qa" | tee logs/vim-plug.$logVersion.log
vim -es -u ~/.vimrc -i NONE -c "PlugInstall" -c "qa" | tee -a logs/vim-plug.$logVersion.log
vim -es -u ~/.vimrc -i NONE -c "PlugUpdate" -c "qa" | tee -a logs/vim-plug.$logVersion.log
vim -es -u ~/.vimrc -i NONE -c "PlugClean!" -c "qa" | tee logs/vim-plug.$logVersion.log
vim -c 'CocUpdateSync|q'

# Install / update pecl dependecies
pecl update-channels
pecl install pcov | tee logs/pecl.$logVersion.log
pecl upgrade | tee -a logs/pecl.$logVersion.log

# Install valet
~/.composer/vendor/bin/valet trust
~/.composer/vendor/bin/valet install | tee logs/valet.$logVersion.log

# Start services
brew services restart mysql

# Additionally, if you receive “zsh compinit: insecure directories” warnings
# when attempting to load these completions, you may need to run this
# see: https://docs.brew.sh/Shell-Completion
# compaudit | xargs chmod g-w

# Install FZF stuff
/usr/local/opt/fzf/install --key-bindings --completion --update-rc --no-bash --no-fish

# Little cleanup
brew cleanup

echo 'Done!'
